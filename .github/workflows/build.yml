name: Build ColorPlus GHA

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Permite ejecutar manualmente

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2
      
    - name: Setup NuGet
      uses: nuget/setup-nuget@v2
      
    - name: Update target framework to 4.8
      working-directory: ColorPlus
      run: |
        (Get-Content ColorPlus.csproj) -replace '<TargetFrameworkVersion>v4.5</TargetFrameworkVersion>', '<TargetFrameworkVersion>v4.8</TargetFrameworkVersion>' | Set-Content ColorPlus.csproj
        Write-Host "Updated target framework from v4.5 to v4.8"
      
    - name: Create packages.config if missing
      working-directory: ColorPlus
      run: |
        if (-not (Test-Path "packages.config")) {
          @"
        <?xml version="1.0" encoding="utf-8"?>
        <packages>
          <package id="Harmony" version="0.3.0" targetFramework="net48" />
          <package id="Splat" version="1.6.2" targetFramework="net48" />
          <package id="RhinoCommon" version="6.35.21222.17001" targetFramework="net48" />
          <package id="Grasshopper" version="6.35.21222.17001" targetFramework="net48" />
        </packages>
        "@ | Out-File -FilePath "packages.config" -Encoding UTF8
        }
      
    - name: Restore NuGet packages
      working-directory: ColorPlus
      run: |
        nuget restore ColorPlus.sln
        nuget install Harmony -Version 0.3.0 -OutputDirectory packages
        nuget install Splat -Version 1.6.2 -OutputDirectory packages
      
    - name: Copy dependencies to output
      working-directory: ColorPlus
      run: |
        # Crear directorio de salida si no existe
        if (-not (Test-Path "bin")) { New-Item -ItemType Directory -Path "bin" }
        
        Write-Host "Looking for dependency files..."
        
        # Buscar y copiar Harmony.dll
        $harmonyPaths = Get-ChildItem -Path "." -Recurse -Filter "Harmony.dll" -ErrorAction SilentlyContinue
        Write-Host "Found Harmony.dll files: $($harmonyPaths.Count)"
        foreach ($path in $harmonyPaths) {
          Write-Host "  - $($path.FullName)"
        }
        
        if ($harmonyPaths) {
          $harmonyPath = $harmonyPaths[0]
          Copy-Item $harmonyPath.FullName "bin\Harmony.dll" -Force
          Write-Host "Copied Harmony.dll to bin folder"
        } else {
          Write-Host "Harmony.dll not found"
        }
        
        # Buscar y copiar Splat.dll
        $splatPaths = Get-ChildItem -Path "." -Recurse -Filter "Splat.dll" -ErrorAction SilentlyContinue
        Write-Host "Found Splat.dll files: $($splatPaths.Count)"
        foreach ($path in $splatPaths) {
          Write-Host "  - $($path.FullName)"
        }
        
        if ($splatPaths) {
          $splatPath = $splatPaths[0]
          Copy-Item $splatPath.FullName "bin\Splat.dll" -Force
          Write-Host "Copied Splat.dll to bin folder"
        } else {
          Write-Host "Splat.dll not found"
        }
        
        # Verificar contenido del directorio bin
        Write-Host "Contents of bin directory:"
        Get-ChildItem "bin" | ForEach-Object { Write-Host "  - $($_.Name)" }
      
    - name: Build solution
      working-directory: ColorPlus
      run: msbuild ColorPlus.sln /p:Configuration=Release /p:Platform="Any CPU"
      
    - name: Upload artifact .gha
      uses: actions/upload-artifact@v4
      with:
        name: ColorPlus-Plugin
        path: |
          ColorPlus/bin/ColorPlus.gha
          ColorPlus/bin/Harmony.dll
          ColorPlus/bin/Splat.dll
        
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ColorPlus/bin/ColorPlus.gha
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
