name: Build ColorPlus Plugin

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [published]

env:
  SOLUTION_FILE: ColorPlus.sln
  PROJECT_FILE: ColorPlus.csproj

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.2.0
      
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3
      
    - name: Restore NuGet packages
      run: nuget restore ${{ env.SOLUTION_FILE }}
      
    - name: Build solution (Debug)
      if: github.event_name != 'release'
      run: msbuild ${{ env.SOLUTION_FILE }} /p:Configuration=Debug /p:Platform="Any CPU"
      
    - name: Build solution (Release)
      if: github.event_name == 'release'
      run: msbuild ${{ env.SOLUTION_FILE }} /p:Configuration=Release /p:Platform="Any CPU"
      
    - name: List output files (Debug)
      if: github.event_name != 'release'
      run: |
        echo "=== Debug Output Files ==="
        dir bin\ /s
        
    - name: Upload Debug Artifacts
      if: github.event_name != 'release'
      uses: actions/upload-artifact@v4
      with:
        name: ColorPlus-Debug
        path: |
          bin/*.gha
          bin/*.dll
          bin/*.pdb
        retention-days: 30
        
    - name: Upload Release Artifacts
      if: github.event_name == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: ColorPlus-Release
        path: |
          bin/*.gha
          bin/*.dll
        retention-days: 90
        
    - name: Create Release Archive
      if: github.event_name == 'release'
      run: |
        mkdir release-files
        copy bin\*.gha release-files\
        copy bin\*.dll release-files\
        powershell Compress-Archive -Path release-files\* -DestinationPath ColorPlus-${{ github.event.release.tag_name }}.zip
        
    - name: Upload to GitHub Release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ColorPlus-${{ github.event.release.tag_name }}.zip
        asset_name: ColorPlus-${{ github.event.release.tag_name }}.zip
        asset_content_type: application/zip
